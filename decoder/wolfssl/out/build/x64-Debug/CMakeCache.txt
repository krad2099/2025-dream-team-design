# This is the CMakeCache file.
# For build in directory: h:/Users/Aalle/Desktop/ectf/main/2025-dream-team-design/decoder/inc/wolfssl-5.7.6/out/build/x64-Debug
# It was generated by CMake: C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/bin/cmake.exe
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Build shared libraries (.dll/.so) instead of static ones (.lib/.a)
BUILD_SHARED_LIBS:BOOL=ON

//Path to a program.
CMAKE_AR:FILEPATH=C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.43.34808/bin/Hostx64/x64/lib.exe

//ASM compiler
CMAKE_ASM_COMPILER:FILEPATH=C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.43.34808/bin/Hostx64/x64/cl.exe

//Flags used by the ASM compiler during all build types.
CMAKE_ASM_FLAGS:STRING=

//Flags used by the ASM compiler during DEBUG builds.
CMAKE_ASM_FLAGS_DEBUG:STRING=

//Flags used by the ASM compiler during MINSIZEREL builds.
CMAKE_ASM_FLAGS_MINSIZEREL:STRING=

//Flags used by the ASM compiler during RELEASE builds.
CMAKE_ASM_FLAGS_RELEASE:STRING=

//Flags used by the ASM compiler during RELWITHDEBINFO builds.
CMAKE_ASM_FLAGS_RELWITHDEBINFO:STRING=

//No help, variable specified on the command line.
CMAKE_BUILD_TYPE:STRING=Debug

//No help, variable specified on the command line.
CMAKE_CXX_COMPILER:FILEPATH=C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.43.34808/bin/Hostx64/x64/cl.exe

//C compiler
CMAKE_C_COMPILER:STRING=C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.43.34808/bin/Hostx64/x64/cl.exe

//Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=/DWIN32 /D_WINDOWS

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=/Zi /Ob0 /Od /RTC1

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=/O1 /Ob1 /DNDEBUG

//Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=/O2 /Ob2 /DNDEBUG

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=/Zi /O2 /Ob1 /DNDEBUG

//Libraries linked by default with all C applications.
CMAKE_C_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=

//Value Computed by CMake.
CMAKE_FIND_PACKAGE_REDIRECTS_DIR:STATIC=H:/Users/Aalle/Desktop/ectf/main/2025-dream-team-design/decoder/inc/wolfssl-5.7.6/out/build/x64-Debug/CMakeFiles/pkgRedirects

//User executables (bin)
CMAKE_INSTALL_BINDIR:PATH=bin

//Read-only architecture-independent data (DATAROOTDIR)
CMAKE_INSTALL_DATADIR:PATH=

//Read-only architecture-independent data root (share)
CMAKE_INSTALL_DATAROOTDIR:PATH=share

//Documentation root (DATAROOTDIR/doc/PROJECT_NAME)
CMAKE_INSTALL_DOCDIR:PATH=

//C header files (include)
CMAKE_INSTALL_INCLUDEDIR:PATH=include

//Info documentation (DATAROOTDIR/info)
CMAKE_INSTALL_INFODIR:PATH=

//Object code libraries (lib)
CMAKE_INSTALL_LIBDIR:PATH=lib

//Program executables (libexec)
CMAKE_INSTALL_LIBEXECDIR:PATH=libexec

//Locale-dependent data (DATAROOTDIR/locale)
CMAKE_INSTALL_LOCALEDIR:PATH=

//Modifiable single-machine data (var)
CMAKE_INSTALL_LOCALSTATEDIR:PATH=var

//Man documentation (DATAROOTDIR/man)
CMAKE_INSTALL_MANDIR:PATH=

//C header files for non-gcc (/usr/include)
CMAKE_INSTALL_OLDINCLUDEDIR:PATH=/usr/include

//No help, variable specified on the command line.
CMAKE_INSTALL_PREFIX:PATH=H:/Users/Aalle/Desktop/ectf/main/2025-dream-team-design/decoder/inc/wolfssl-5.7.6/out/install/x64-Debug

//Run-time variable data (LOCALSTATEDIR/run)
CMAKE_INSTALL_RUNSTATEDIR:PATH=

//System admin executables (sbin)
CMAKE_INSTALL_SBINDIR:PATH=sbin

//Modifiable architecture-independent data (com)
CMAKE_INSTALL_SHAREDSTATEDIR:PATH=com

//Read-only single-machine data (etc)
CMAKE_INSTALL_SYSCONFDIR:PATH=etc

//Path to a program.
CMAKE_LINKER:FILEPATH=C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.43.34808/bin/Hostx64/x64/link.exe

//make program
CMAKE_MAKE_PROGRAM:FILEPATH=C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Path to a program.
CMAKE_MT:FILEPATH=C:/Program Files (x86)/Windows Kits/10/bin/10.0.26100.0/x64/mt.exe

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=wolfssl

//Value Computed by CMake
CMAKE_PROJECT_VERSION:STATIC=5.7.6

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MAJOR:STATIC=5

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MINOR:STATIC=7

//Value Computed by CMake
CMAKE_PROJECT_VERSION_PATCH:STATIC=6

//Value Computed by CMake
CMAKE_PROJECT_VERSION_TWEAK:STATIC=

//RC compiler
CMAKE_RC_COMPILER:FILEPATH=C:/Program Files (x86)/Windows Kits/10/bin/10.0.26100.0/x64/rc.exe

//Flags for Windows Resource Compiler during all build types.
CMAKE_RC_FLAGS:STRING=-DWIN32

//Flags for Windows Resource Compiler during DEBUG builds.
CMAKE_RC_FLAGS_DEBUG:STRING=-D_DEBUG

//Flags for Windows Resource Compiler during MINSIZEREL builds.
CMAKE_RC_FLAGS_MINSIZEREL:STRING=

//Flags for Windows Resource Compiler during RELEASE builds.
CMAKE_RC_FLAGS_RELEASE:STRING=

//Flags for Windows Resource Compiler during RELWITHDEBINFO builds.
CMAKE_RC_FLAGS_RELWITHDEBINFO:STRING=

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Enable sccache (default: disabled)
ENABLE_SCCACHE:BOOL=no

//Enables 16-bit support (default: disabled)
WOLFSSL_16BIT:BOOL=no

//Enables 32-bit support (default: disabled)
WOLFSSL_32BIT:BOOL=no

//Enable AES (default: enabled)
WOLFSSL_AES:BOOL=yes

//Enable wolfSSL AES-CBC support (default: enabled)
WOLFSSL_AESCBC:BOOL=yes

//Enable wolfSSL AES-CCM support (default: disabled)
WOLFSSL_AESCCM:BOOL=no

//Enable wolfSSL AES-CFB support (default: disabled)
WOLFSSL_AESCFB:BOOL=no

//Enable wolfSSL AES-CTR support (default: disabled)
WOLFSSL_AESCTR:BOOL=no

//Enable wolfSSL AES-GCM support (default: enabled)
WOLFSSL_AESGCM:STRING=yes

//Enable AES key wrap support (default: disabled)
WOLFSSL_AESKEYWRAP:BOOL=no

//Enable wolfSSL AES-OFB support (default: disabled)
WOLFSSL_AESOFB:BOOL=no

//Enable wolfSSL AES-SIV support (default: disabled)
WOLFSSL_AESSIV:BOOL=no

//Align data for ciphers (default: enabled)
WOLFSSL_ALIGN_DATA:BOOL=yes

//Enable ALPN support (default: disabled)
WOLFSSL_ALPN:BOOL=no

//Enable support for Alternate certification chains (default: disabled)
WOLFSSL_ALT_CERT_CHAINS:BOOL=no

//Enable ARC4 (default: disabled)
WOLFSSL_ARC4:BOOL=no

//Enable wolfSSL ARIA support (default: disabled)
WOLFSSL_ARIA:BOOL=no

//Enable asio support (default: disabled)
WOLFSSL_ASIO:BOOL=no

//Enables option for assembly (default: enabled)
WOLFSSL_ASM:BOOL=yes

//Enable ASN (default: enabled)
WOLFSSL_ASN:BOOL=yes

//Enable Asynchronous Threading (default: enabled)
WOLFSSL_ASYNC_THREADS:BOOL=no

//Enable Base64 encoding (default: enabled on x86_64)
WOLFSSL_BASE64_ENCODE:BOOL=yes

//Don't generate files in the source tree (default: yes)
WOLFSSL_BUILD_OUT_OF_TREE:BOOL=yes

//Enable use of CAAM with NXP (default: disabled)
WOLFSSL_CAAM:BOOL=no

//Enable cert request extensions (default: disabled)
WOLFSSL_CERTEXT:BOOL=no

//Enable cert generation (default: disabled)
WOLFSSL_CERTGEN:BOOL=no

//Enable decoded cert caching (default: disabled)
WOLFSSL_CERTGENCACHE:BOOL=no

//Enable cert request generation (default: disabled)
WOLFSSL_CERTREQ:BOOL=no

//Enable CHACHA (default: enabled). Use `=noasm` to disable ASM
// AVX/AVX2 speedups
WOLFSSL_CHACHA:STRING=yes

//Enable CMAC (default: disabled)
WOLFSSL_CMAC:BOOL=no

//Enable coding base 16/64 (default: enabled)
WOLFSSL_CODING:BOOL=yes

//Enable generation of config.h and define HAVE_CONFIG_H (default:
// enabled)
WOLFSSL_CONFIG_H:BOOL=yes

//Enable CRL (Use =io for inline CRL HTTP GET) (default: disabled)
WOLFSSL_CRL:STRING=no

//Enable crypto callbacks (default: disabled)
WOLFSSL_CRYPTOCB:BOOL=no

//Disable crypto callback SW testing (default: disabled)
WOLFSSL_CRYPTOCB_NO_SW_TEST:BOOL=no

//Enable Crypt Bench/Test (default: enabled)
WOLFSSL_CRYPT_TESTS:BOOL=yes

//Add help text to wolfCrypt test (default: disabled)
WOLFSSL_CRYPT_TESTS_HELP:BOOL=no

//Build static libraries from the wolfCrypt test and benchmark
// sources (default: disabled)
WOLFSSL_CRYPT_TESTS_LIBS:BOOL=no

//Enable CURL support (default: disabled)
WOLFSSL_CURL:BOOL=no

//Enable Curve25519 (default: disabled)
WOLFSSL_CURVE25519:STRING=no

//Enable Curve448 (default: disabled)
WOLFSSL_CURVE448:STRING=no

//Enables option for debug (default: disabled)
WOLFSSL_DEBUG:BOOL=no

//Enable DES3 (default: disabled)
WOLFSSL_DES3:BOOL=no

//Enable DES3 TLS cipher suites (default: disabled)
WOLFSSL_DES3_TLS_SUITES:BOOL=no

//Enable DH (default: enabled)
WOLFSSL_DH:STRING=yes

//Enables option for default dh parameters (default: disabled)
WOLFSSL_DH_DEFAULT_PARAMS:BOOL=yes

//Enable DSA (default: disabled)
WOLFSSL_DSA:BOOL=no

//Enables wolfSSL DTLS (default: disabled)
WOLFSSL_DTLS:BOOL=no

//Enable wolfSSL DTLS v1.3 (default: disabled)
WOLFSSL_DTLS13:BOOL=no

//Enables wolfSSL DTLS CID (default: disabled)
WOLFSSL_DTLS_CID:BOOL=no

//Enable ECC (default: enabled)
WOLFSSL_ECC:STRING=yes

//Enable ECC Custom Curves (default: disabled)
WOLFSSL_ECCCUSTCURVES:STRING=no

//Enable ECC Shamir (default: enabled)
WOLFSSL_ECCSHAMIR:BOOL=yes

//Enable wolfSSL encrypted client hello (default: disabled)
WOLFSSL_ECH:BOOL=no

//Enable ED25519 (default: disabled)
WOLFSSL_ED25519:BOOL=no

//Enable ED448 (default: disabled)
WOLFSSL_ED448:STRING=no

//Enable PEM encrypted key support (default: disabled)
WOLFSSL_ENCKEYS:BOOL=no

//Enable Encryptr-Then-Mac extension (default: enabled)
WOLFSSL_ENC_THEN_MAC:BOOL=yes

//Enables adding nodes to error queue when compiled with OPENSSL_EXTRA
// (default: enabled)
WOLFSSL_ERROR_QUEUE:BOOL=yes

//Enable error strings table (default: enabled)
WOLFSSL_ERROR_STRINGS:BOOL=yes

//Enable examples (default: enabled)
WOLFSSL_EXAMPLES:BOOL=yes

//Enable experimental features (default: disabled)
WOLFSSL_EXPERIMENTAL:BOOL=no

//Enable Extended Master Secret (default: enabled)
WOLFSSL_EXTENDED_MASTER:BOOL=yes

//Enable app data (default: disabled)
WOLFSSL_EX_DATA:BOOL=no

//Enable fast math ops (default: disabled)
WOLFSSL_FAST_MATH:BOOL=no

//Enable Filesystem support (default: enabled)
WOLFSSL_FILESYSTEM:BOOL=yes

//Enable Hardened build, Enables Timing Resistance and Blinding
// (default: enabled)
WOLFSSL_HARDEN:BOOL=yes

//Enable Hash DRBG support (default: enabled)
WOLFSSL_HASH_DRBG:BOOL=yes

//Enable HKDF (HMAC-KDF) support (default: disabled)
WOLFSSL_HKDF:BOOL=yes

//Enable wolfSSL hybrid public key encryption (default: disabled)
WOLFSSL_HPKE:BOOL=no

//Enable the server to send Cookie Extension in HRR with state
// (default: disabled)
WOLFSSL_HRR_COOKIE:STRING=undefined

//Enable inline functions (default: enabled)
WOLFSSL_INLINE:BOOL=yes

//Create install target for WolfSSL project
WOLFSSL_INSTALL:BOOL=yes

//Enable support for IP alternative name (default: disabled)
WOLFSSL_IP_ALT_NAME:BOOL=no

//Enable key generation (default: disabled)])
WOLFSSL_KEYGEN:BOOL=no

//Enable wolfSSL keying material export (default: disabled)
WOLFSSL_KEYING_MATERIAL:BOOL=no

//Enable the wolfSSL PQ Kyber library (default: disabled)
WOLFSSL_KYBER:BOOL=no

//Enable MD4 (default: disabled)
WOLFSSL_MD4:BOOL=no

//Enable MD5 (default: enabled)
WOLFSSL_MD5:BOOL=yes

//Enable memory callbacks (default: enabled)
WOLFSSL_MEMORY:BOOL=yes

//Removes OpenSSL compatibility stub functions (default: disabled)
WOLFSSL_NO_STUB:BOOL=no

//Enable RSA OAEP (default: enabled)
WOLFSSL_OAEP:BOOL=yes

//Enable OCSP (default: disabled)
WOLFSSL_OCSP:BOOL=no

//Enable OCSP Stapling (default: disabled)
WOLFSSL_OCSPSTAPLING:BOOL=no

//Enable OCSP Stapling v2 (default: disabled)
WOLFSSL_OCSPSTAPLING_V2:BOOL=no

//Keep backwards compat with old names (default: enabled)
WOLFSSL_OLD_NAMES:BOOL=yes

//Enable old TLS versions < 1.2 (default: enabled)
WOLFSSL_OLD_TLS:BOOL=yes

//Enable all OpenSSL API, size++ (default: disabled)
WOLFSSL_OPENSSLALL:BOOL=no

//Enable extra OpenSSL API, size+ (default: disabled)
WOLFSSL_OPENSSLEXTRA:BOOL=no

//Enable default optimization CFLAGS for the compiler (default:
// enabled)
WOLFSSL_OPTFLAGS:BOOL=yes

//Enable integration with the OQS (Open Quantum Safe) liboqs library
// (default: disabled)
WOLFSSL_OQS:BOOL=no

//Enable public key callbacks (default: disabled)
WOLFSSL_PKCALLBACKS:BOOL=no

//Enable pkcs12 (default: enabled)
WOLFSSL_PKCS12:BOOL=yes

//Enable PKCS7 (default: disabled)
WOLFSSL_PKCS7:BOOL=no

//Enable wolfSSL POLY1305 support (default: enabled)
WOLFSSL_POLY1305:BOOL=yes

//Enable wolfSSL Post-handshake Authentication (default: disabled)
WOLFSSL_POSTAUTH:BOOL=no

//Enable PWDBASED (default: disabled)
WOLFSSL_PWDBASED:BOOL=yes

//Enable QUIC support (default: disabled)
WOLFSSL_QUIC:BOOL=no

//Enable maximally reproducible build (default: disabled)
WOLFSSL_REPRODUCIBLE_BUILD:BOOL=no

//Enable compiling and using RNG (default: enabled)
WOLFSSL_RNG:BOOL=yes

//Enable RSA (default: enabled)
WOLFSSL_RSA:BOOL=yes

//Enable RSA-PSS (default: disabled)
WOLFSSL_RSA_PSS:BOOL=yes

//Enable Session Ticket (default: disabled)
WOLFSSL_SESSION_TICKET:BOOL=no

//Enable SHA (default: enabled)
WOLFSSL_SHA:BOOL=yes

//Enable wolfSSL SHA-224 support (default: enabled on x86_64/aarch64)
WOLFSSL_SHA224:BOOL=yes

//Enable wolfSSL SHA-3 support (default: enabled on x86_64/aarch64)
WOLFSSL_SHA3:STRING=yes

//Enable wolfSSL SHA-384 support (default: enabled)
WOLFSSL_SHA384:BOOL=yes

//Enable wolfSSL SHA-512 support (default: enabled)
WOLFSSL_SHA512:BOOL=yes

//Enable wolfSSL SHAKE128 support (default: enabled on x86_64/aarch64)
WOLFSSL_SHAKE128:STRING=no

//Enable wolfSSL SHAKE256 support (default: enabled on x86_64/aarch64)
WOLFSSL_SHAKE256:STRING=no

//Enable wolfSSL single threaded (default: disabled)
WOLFSSL_SINGLE_THREADED:BOOL=no

//Enable SNI (default: disabled)
WOLFSSL_SNI:BOOL=yes

//Enable Single Precision math implementation for full algorithm
// suite (default: enabled)
WOLFSSL_SP_MATH_ALL:BOOL=yes

//Enables wolfSSL DTLS-SRTP (default: disabled)
WOLFSSL_SRTP:BOOL=no

//Enable stunnel (default: disabled)
WOLFSSL_STUNNEL:BOOL=no

//Enable Supported Elliptic Curves (default: enabled)
WOLFSSL_SUPPORTED_CURVES:BOOL=yes

//Enable ability to load CA certs from OS (default: enabled)
WOLFSSL_SYS_CA_CERTS:BOOL=yes

//Enable dynamic allocation of ticket nonces (default: disabled)
WOLFSSL_TICKET_NONCE_MALLOC:BOOL=no

//Enable wolfSSL TLS v1.3 (default: enabled)
WOLFSSL_TLS13:BOOL=yes

//Enable TLS versions 1.2 (default: enabled)
WOLFSSL_TLSV12:BOOL=yes

//Enable all TLS Extensions (default: disabled)
WOLFSSL_TLSX:BOOL=no

//Enable wolfTPM options (default: disabled)
WOLFSSL_TPM:BOOL=no

//Use your own user_settings.h and do not add Makefile CFLAGS (default:
// disabled)
WOLFSSL_USER_SETTINGS:BOOL=no

//Enable use of user_settings_asm.h in assembly files (default:
// disabled)
WOLFSSL_USER_SETTINGS_ASM:BOOL=no

//Enable support for wolfSSH (default: disabled)
WOLFSSL_WOLFSSH:BOOL=no

//Build ASM files
WOLFSSL_X86_64_BUILD_ASM:BOOL=yes

//Enable X9.63 KDF support (default: disabled)
WOLFSSL_X963KDF:BOOL=no

//Value Computed by CMake
wolfssl_BINARY_DIR:STATIC=H:/Users/Aalle/Desktop/ectf/main/2025-dream-team-design/decoder/inc/wolfssl-5.7.6/out/build/x64-Debug

//Value Computed by CMake
wolfssl_IS_TOP_LEVEL:STATIC=ON

//Value Computed by CMake
wolfssl_SOURCE_DIR:STATIC=H:/Users/Aalle/Desktop/ectf/main/2025-dream-team-design/decoder/inc/wolfssl-5.7.6


########################
# INTERNAL cache entries
########################

//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_COMPILER
CMAKE_ASM_COMPILER-ADVANCED:INTERNAL=1
CMAKE_ASM_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS
CMAKE_ASM_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_DEBUG
CMAKE_ASM_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_MINSIZEREL
CMAKE_ASM_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_RELEASE
CMAKE_ASM_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_RELWITHDEBINFO
CMAKE_ASM_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=h:/Users/Aalle/Desktop/ectf/main/2025-dream-team-design/decoder/inc/wolfssl-5.7.6/out/build/x64-Debug
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=30
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=5
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/bin/cmake.exe
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/bin/cpack.exe
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/bin/ctest.exe
//ADVANCED property for variable: CMAKE_C_COMPILER
CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_STANDARD_LIBRARIES
CMAKE_C_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Ninja
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Test CMAKE_HAVE_LIBC_PTHREAD
CMAKE_HAVE_LIBC_PTHREAD:INTERNAL=
//Have library pthreads
CMAKE_HAVE_PTHREADS_CREATE:INTERNAL=
//Have library pthread
CMAKE_HAVE_PTHREAD_CREATE:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=H:/Users/Aalle/Desktop/ectf/main/2025-dream-team-design/decoder/inc/wolfssl-5.7.6
//ADVANCED property for variable: CMAKE_INSTALL_BINDIR
CMAKE_INSTALL_BINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATADIR
CMAKE_INSTALL_DATADIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATAROOTDIR
CMAKE_INSTALL_DATAROOTDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DOCDIR
CMAKE_INSTALL_DOCDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INCLUDEDIR
CMAKE_INSTALL_INCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INFODIR
CMAKE_INSTALL_INFODIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBDIR
CMAKE_INSTALL_LIBDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBEXECDIR
CMAKE_INSTALL_LIBEXECDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALEDIR
CMAKE_INSTALL_LOCALEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALSTATEDIR
CMAKE_INSTALL_LOCALSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_MANDIR
CMAKE_INSTALL_MANDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_OLDINCLUDEDIR
CMAKE_INSTALL_OLDINCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_RUNSTATEDIR
CMAKE_INSTALL_RUNSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SBINDIR
CMAKE_INSTALL_SBINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SHAREDSTATEDIR
CMAKE_INSTALL_SHAREDSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SYSCONFDIR
CMAKE_INSTALL_SYSCONFDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MT
CMAKE_MT-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=1
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//noop for ranlib
CMAKE_RANLIB:INTERNAL=:
//ADVANCED property for variable: CMAKE_RC_COMPILER
CMAKE_RC_COMPILER-ADVANCED:INTERNAL=1
CMAKE_RC_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS
CMAKE_RC_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_DEBUG
CMAKE_RC_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_MINSIZEREL
CMAKE_RC_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELEASE
CMAKE_RC_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELWITHDEBINFO
CMAKE_RC_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.30
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//Details about finding Threads
FIND_PACKAGE_MESSAGE_DETAILS_Threads:INTERNAL=[TRUE][v()]
//Have include arpa/inet.h
HAVE_ARPA_INET_H:INTERNAL=
//Have function __atomic_fetch_add
HAVE_C___ATOMIC:INTERNAL=
//Have include dlfcn.h
HAVE_DLFCN_H:INTERNAL=
//Have include errno.h
HAVE_ERRNO_H:INTERNAL=1
//Have include fcntl.h
HAVE_FCNTL_H:INTERNAL=1
//Have function getaddrinfo
HAVE_GETADDRINFO:INTERNAL=
//Have function gethostbyname
HAVE_GETHOSTBYNAME:INTERNAL=
//Have function gettimeofday
HAVE_GETTIMEOFDAY:INTERNAL=
//Have function gmtime_r
HAVE_GMTIME_R:INTERNAL=
//Result of TRY_COMPILE
HAVE_HAVE_UINTPTR_T:INTERNAL=TRUE
//Have function inet_ntoa
HAVE_INET_NTOA:INTERNAL=
//Have include inttypes.h
HAVE_INTTYPES_H:INTERNAL=1
//Have include limits.h
HAVE_LIMITS_H:INTERNAL=1
//Have include memory.h
HAVE_MEMORY_H:INTERNAL=1
//Have function memset
HAVE_MEMSET:INTERNAL=1
//Have include netdb.h
HAVE_NETDB_H:INTERNAL=
//Have include netinet/in.h
HAVE_NETINET_IN_H:INTERNAL=
//Result of TRY_COMPILE
HAVE_SIZEOF_LONG:INTERNAL=TRUE
//Result of TRY_COMPILE
HAVE_SIZEOF_LONG_LONG:INTERNAL=TRUE
//Result of TRY_COMPILE
HAVE_SIZEOF_TIME_T:INTERNAL=TRUE
//Have function socket
HAVE_SOCKET:INTERNAL=
//Have include stddef.h
HAVE_STDDEF_H:INTERNAL=1
//Have include stdint.h
HAVE_STDINT_H:INTERNAL=1
//Have include stdlib.h
HAVE_STDLIB_H:INTERNAL=1
//Have function strftime
HAVE_STRFTIME:INTERNAL=1
//Have include strings.h
HAVE_STRINGS_H:INTERNAL=
//Have include string.h
HAVE_STRING_H:INTERNAL=1
//Have include sys/ioctl.h
HAVE_SYS_IOCTL_H:INTERNAL=
//Have include sys/socket.h
HAVE_SYS_SOCKET_H:INTERNAL=
//Have include sys/stat.h
HAVE_SYS_STAT_H:INTERNAL=1
//Have include sys/time.h
HAVE_SYS_TIME_H:INTERNAL=
//Have include sys/types.h
HAVE_SYS_TYPES_H:INTERNAL=1
//Have include time.h
HAVE_TIME_H:INTERNAL=1
//CHECK_TYPE_SIZE: sizeof(uintptr_t)
HAVE_UINTPTR_T:INTERNAL=8
//Have include unistd.h
HAVE_UNISTD_H:INTERNAL=
//Result of TRY_COMPILE
HAVE___UINT128_T:INTERNAL=FALSE
//CHECK_TYPE_SIZE: sizeof(long)
SIZEOF_LONG:INTERNAL=4
//CHECK_TYPE_SIZE: sizeof(long long)
SIZEOF_LONG_LONG:INTERNAL=8
//CHECK_TYPE_SIZE: sizeof(time_t)
SIZEOF_TIME_T:INTERNAL=8
//Test THREAD_LS_ON
THREAD_LS_ON:INTERNAL=1
//STRINGS property for variable: WOLFSSL_AESGCM
WOLFSSL_AESGCM-STRINGS:INTERNAL=yes;no;table;small;word32;4bit
//STRINGS property for variable: WOLFSSL_CHACHA
WOLFSSL_CHACHA-STRINGS:INTERNAL=yes;no;noasm
//STRINGS property for variable: WOLFSSL_CRL
WOLFSSL_CRL-STRINGS:INTERNAL=yes;no;io
//STRINGS property for variable: WOLFSSL_CURVE25519
WOLFSSL_CURVE25519-STRINGS:INTERNAL=yes;no;small;no128bit
//STRINGS property for variable: WOLFSSL_CURVE448
WOLFSSL_CURVE448-STRINGS:INTERNAL=yes;no;small
//STRINGS property for variable: WOLFSSL_DH
WOLFSSL_DH-STRINGS:INTERNAL=yes;no;const
//STRINGS property for variable: WOLFSSL_ECC
WOLFSSL_ECC-STRINGS:INTERNAL=yes;no;nonblock
//STRINGS property for variable: WOLFSSL_ECCCUSTCURVES
WOLFSSL_ECCCUSTCURVES-STRINGS:INTERNAL=yes;no;all
//STRINGS property for variable: WOLFSSL_ED448
WOLFSSL_ED448-STRINGS:INTERNAL=yes;no;small
//STRINGS property for variable: WOLFSSL_HRR_COOKIE
WOLFSSL_HRR_COOKIE-STRINGS:INTERNAL=yes;no;undefined
//STRINGS property for variable: WOLFSSL_SHA3
WOLFSSL_SHA3-STRINGS:INTERNAL=yes;no;small
//STRINGS property for variable: WOLFSSL_SHAKE128
WOLFSSL_SHAKE128-STRINGS:INTERNAL=yes;no;small
//STRINGS property for variable: WOLFSSL_SHAKE256
WOLFSSL_SHAKE256-STRINGS:INTERNAL=yes;no;small
//CMAKE_INSTALL_PREFIX during last run
_GNUInstallDirs_LAST_CMAKE_INSTALL_PREFIX:INTERNAL=H:/Users/Aalle/Desktop/ectf/main/2025-dream-team-design/decoder/inc/wolfssl-5.7.6/out/install/x64-Debug
//CHECK_TYPE_SIZE: __uint128_t unknown
__UINT128_T:INTERNAL=

